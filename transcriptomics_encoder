


class RNAEncoder(nn.Module):
    def __init__(self, input_dim, embedding_dim=256):
        super().__init__()

        if input_dim >= 128:
            self.model = nn.Sequential(
                nn.Linear(input_dim, 128),
                nn.ReLU(),
                nn.Linear(128, 64),
                nn.ReLU(),
                nn.Linear(64, embedding_dim)
            )
        elif input_dim >= 64:
            self.model = nn.Sequential(
                nn.Linear(input_dim, 64),
                nn.ReLU(),
                nn.Linear(64, embedding_dim)
            )
        else:
            self.model = nn.Sequential(
                nn.Linear(input_dim, 32),
                nn.ReLU(),
                nn.Linear(32, embedding_dim)
            )

    def forward(self, x):
        return self.model(x)


